#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "Arduino.h"
#include "DFRobotDFPlayerMini.h"
#include <SoftwareSerial.h>



const unsigned char epd_bitmap_frame_0_delay_0 [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf0, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x80, 0x38, 0xff, 0xfd, 0xc7, 0xfe, 0x3f, 0xff, 0xff, 
	0xff, 0xc3, 0x71, 0xff, 0xff, 0xff, 0xff, 0x03, 0xb9, 0xff, 0xfc, 0xcf, 0xfe, 0x7f, 0xff, 0xff, 
	0xff, 0xce, 0x73, 0xff, 0x7e, 0x7f, 0xee, 0x33, 0x9b, 0x3c, 0xf1, 0xdf, 0xfc, 0xff, 0xdf, 0xff, 
	0xff, 0xce, 0x67, 0x0e, 0x4e, 0x5c, 0xee, 0x67, 0xbf, 0x3c, 0xe9, 0x99, 0xc4, 0xc3, 0xd9, 0xff, 
	0xff, 0xdc, 0xe6, 0x6e, 0x2c, 0x8c, 0xcf, 0xce, 0x33, 0x3c, 0xe3, 0x21, 0x91, 0xcb, 0x99, 0xff, 
	0xff, 0xf9, 0xce, 0x7c, 0xe4, 0xc9, 0x9f, 0xc8, 0xe6, 0x9b, 0x67, 0x2b, 0x99, 0x9f, 0x33, 0xff, 
	0xff, 0xe0, 0x04, 0xcc, 0xc8, 0xc9, 0x9b, 0x81, 0xcd, 0x9a, 0x67, 0x13, 0x33, 0x33, 0x33, 0x7f, 
	0xff, 0xe3, 0x9c, 0x88, 0xc9, 0x93, 0x17, 0x9e, 0xcd, 0x34, 0xce, 0x36, 0x63, 0x22, 0x62, 0xff, 
	0xff, 0xf3, 0x99, 0x51, 0x93, 0x92, 0xaf, 0x9e, 0x4b, 0x2c, 0x8c, 0x64, 0x56, 0x54, 0x56, 0xff, 
	0xff, 0xf3, 0x99, 0x41, 0x32, 0x31, 0x9f, 0xb8, 0xc6, 0x59, 0x48, 0x62, 0x10, 0x50, 0x31, 0xff, 
	0xff, 0xe7, 0x9c, 0xd2, 0x64, 0x73, 0x3f, 0x81, 0xcf, 0x3c, 0x66, 0xf6, 0x33, 0x37, 0x67, 0xff, 
	0xff, 0xf7, 0x9f, 0xf7, 0xe7, 0xfe, 0x7f, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xe7, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x4f, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xef, 0xf4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x9f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xeb, 0xdf, 0xfb, 0xbd, 0xff, 0xdf, 0xfb, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0xc3, 0xf8, 0x8f, 0xff, 0xcf, 0xf1, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x47, 0xf0, 0x8f, 0xff, 0x87, 0xf1, 0xfe, 0xff, 0xf9, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x08, 0x46, 0xff, 0x8f, 0xbf, 0xd7, 0xf5, 0xf7, 0xfd, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x0c, 0xc0, 0x38, 0x8e, 0x00, 0xd7, 0xe5, 0xc0, 0xe4, 0x1d, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x87, 0xc0, 0x18, 0x8c, 0x00, 0xd3, 0xed, 0xde, 0x73, 0x9d, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x81, 0xc2, 0x10, 0x8c, 0x20, 0xdb, 0xc9, 0x9f, 0x33, 0xcd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0xc7, 0x19, 0x88, 0x78, 0xd9, 0xdd, 0xbf, 0xb7, 0xed, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0x47, 0x18, 0x88, 0xf8, 0xdd, 0x9d, 0x3f, 0x97, 0xed, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x1c, 0x47, 0x18, 0xcc, 0xf0, 0xdc, 0xb9, 0xbf, 0xb7, 0xc9, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x0c, 0x47, 0x10, 0x8c, 0x70, 0xde, 0xbd, 0xbf, 0x37, 0xed, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x47, 0x18, 0x8c, 0x00, 0xde, 0x3d, 0x9f, 0x67, 0xed, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x67, 0x18, 0x8c, 0x00, 0xde, 0x79, 0xc4, 0xf7, 0xcd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xcf, 0x9b, 0xcf, 0x0d, 0xdf, 0x7d, 0xf3, 0xf7, 0xed, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x09, 0x02, 0x22, 0x04, 0x11, 0x64, 0x89, 0x24, 0x06, 0x18, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x1a, 0xfb, 0x2c, 0x6b, 0x69, 0x2b, 0x32, 0x2a, 0x50, 0xd0, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x87, 0x29, 0xb5, 0x2a, 0xd9, 0x89, 0xb3, 0x2a, 0x56, 0xd1, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x08, 0x02, 0x02, 0x00, 0x00, 0x04, 0x08, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xb6, 0xed, 0xb9, 0x36, 0xdb, 0x6d, 0xb6, 0xcd, 0xef, 0xb3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char epd_bitmap_frame_1_delay_1s [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0x3c, 0xff, 0xef, 0xff, 0xff, 0x80, 0x78, 0xff, 0xfd, 0xcf, 0xfc, 0xff, 0xff, 0xff, 
	0xff, 0xf1, 0xbc, 0xff, 0xff, 0xbf, 0xff, 0x03, 0x39, 0xff, 0xf9, 0xcf, 0xfc, 0xff, 0xff, 0xff, 
	0xff, 0xf3, 0x99, 0xff, 0xbf, 0xff, 0xef, 0x33, 0xbb, 0x39, 0xf3, 0x9f, 0xf9, 0xff, 0xff, 0xff, 
	0xff, 0xe7, 0x39, 0x87, 0x26, 0x4e, 0xee, 0x67, 0xbe, 0x7d, 0xd3, 0x33, 0x99, 0x87, 0x37, 0xff, 
	0xff, 0xf6, 0x73, 0x97, 0x46, 0x4c, 0xcf, 0x66, 0x26, 0x38, 0xe1, 0x23, 0x03, 0x36, 0x63, 0xff, 
	0xff, 0xfe, 0x73, 0x3e, 0x34, 0xa4, 0xcf, 0xc8, 0xe6, 0x9a, 0x6f, 0x57, 0x73, 0x3e, 0x67, 0xff, 
	0xff, 0xf0, 0x02, 0x66, 0x64, 0xe9, 0x9b, 0xc1, 0xcd, 0xb6, 0xce, 0x26, 0x66, 0x44, 0xc5, 0xff, 
	0xff, 0xd8, 0xe6, 0x44, 0xcc, 0xc9, 0x13, 0x9e, 0xcd, 0x34, 0x8c, 0x64, 0xc4, 0xcc, 0x8d, 0xff, 
	0xff, 0xfd, 0xcc, 0xa8, 0xc9, 0x93, 0x17, 0x9e, 0x5a, 0x69, 0x98, 0x4c, 0xac, 0xa9, 0xab, 0xff, 
	0xff, 0xf9, 0xcc, 0xa0, 0x99, 0x30, 0x9f, 0x98, 0xc6, 0x59, 0x44, 0xc0, 0x20, 0x60, 0x47, 0xff, 
	0xff, 0xf9, 0xc6, 0x69, 0x32, 0x7b, 0x3f, 0xc1, 0xcf, 0x3c, 0xcc, 0xee, 0x7e, 0x6e, 0xdf, 0xff, 
	0xff, 0xff, 0xff, 0xfb, 0xf3, 0xfe, 0x7f, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 
	0xff, 0xff, 0xff, 0xf3, 0xe7, 0xf2, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xbf, 0xff, 
	0xff, 0xff, 0xff, 0xf3, 0xf7, 0xfa, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xbf, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x83, 0x8f, 0xf1, 0x8f, 0xff, 0x8f, 0xf9, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0xc7, 0xd1, 0x8f, 0xf7, 0xcf, 0xf9, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0x8f, 0xf9, 0x8f, 0xff, 0xc7, 0xf1, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x18, 0x88, 0xff, 0x8f, 0x1a, 0xd7, 0xf5, 0xe9, 0xf6, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x1f, 0xc0, 0x31, 0x8c, 0x00, 0xd3, 0xe4, 0xe0, 0x70, 0x8e, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x07, 0x80, 0x31, 0x8c, 0x00, 0xdb, 0xed, 0xcf, 0x39, 0xe6, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0x86, 0x11, 0x08, 0x60, 0xc9, 0xcd, 0x9f, 0x9b, 0xf6, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0xce, 0x11, 0x88, 0xf8, 0xdd, 0xdc, 0xbf, 0xd3, 0xf6, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x8f, 0x31, 0x88, 0xf8, 0xdd, 0xdd, 0xbf, 0xdb, 0xe6, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x18, 0x87, 0x11, 0x88, 0xf0, 0xdc, 0x9d, 0x9f, 0x9b, 0xf6, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x18, 0xce, 0x11, 0x8c, 0x70, 0xce, 0xbc, 0xdf, 0x93, 0xf6, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0x8e, 0x31, 0x8c, 0x00, 0xde, 0x3d, 0xcf, 0x3b, 0xe6, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0x87, 0x11, 0x8e, 0x00, 0xdf, 0x7d, 0xe0, 0x7b, 0xf6, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0xff, 0x7d, 0xbf, 0x1b, 0xdf, 0x7d, 0xfd, 0xff, 0xf6, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0x00, 0x80, 0x01, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xf1, 0xbd, 0x7b, 0xd8, 0xde, 0xbb, 0x2e, 0xf5, 0x8d, 0x49, 0xb9, 0x8f, 0xff, 0xff, 
	0xff, 0xff, 0xf1, 0xb5, 0xab, 0x54, 0x92, 0xb1, 0xa8, 0xd6, 0xc1, 0x49, 0xac, 0x8f, 0xff, 0xff, 
	0xff, 0xff, 0xe1, 0x24, 0x59, 0x58, 0x19, 0x81, 0x06, 0x16, 0x45, 0x84, 0x62, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0xdb, 0xdb, 0x6d, 0xdd, 0xbe, 0xee, 0xf6, 0xdb, 0x6f, 0x6f, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char epd_bitmap_frame_2_delay_0 [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xfd, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 
	0xff, 0xf0, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3c, 0xff, 0xfd, 0xe7, 0xfe, 0x7f, 0xff, 0xff, 
	0xff, 0xe3, 0x71, 0xff, 0xff, 0xbf, 0xff, 0x03, 0xb9, 0xff, 0xfc, 0xcf, 0xfe, 0x7f, 0xff, 0xff, 
	0xff, 0xce, 0x73, 0xff, 0x7e, 0xff, 0xfe, 0x33, 0x9b, 0x3c, 0xf9, 0xcf, 0xfc, 0xff, 0xdf, 0xff, 
	0xff, 0xce, 0x67, 0x0e, 0x4e, 0x5c, 0xce, 0x67, 0xbf, 0x3c, 0xe1, 0x9b, 0xc4, 0xc3, 0xd9, 0xff, 
	0xff, 0xdc, 0xe6, 0x6e, 0x2c, 0x8c, 0xcf, 0xce, 0x33, 0x3c, 0xe3, 0x31, 0x91, 0xcb, 0x99, 0xff, 
	0xff, 0xf9, 0xce, 0x7c, 0xe4, 0x69, 0x9f, 0xc8, 0xe6, 0x9b, 0x67, 0x23, 0x39, 0x9f, 0x33, 0xff, 
	0xff, 0xe0, 0x04, 0xcc, 0xc9, 0xc9, 0x9b, 0x81, 0xcd, 0x9a, 0x67, 0x13, 0x33, 0x33, 0x33, 0x7f, 
	0xff, 0xe3, 0x9c, 0x88, 0xc9, 0x93, 0x17, 0x9e, 0xcd, 0x34, 0xce, 0x36, 0x63, 0x22, 0x62, 0xff, 
	0xff, 0xf3, 0x99, 0x51, 0x93, 0x92, 0xaf, 0x9e, 0x4b, 0x2c, 0x8c, 0x64, 0x52, 0x54, 0x56, 0xff, 
	0xff, 0xf3, 0x99, 0x41, 0x32, 0x31, 0x9f, 0xb8, 0xc6, 0x59, 0x48, 0x62, 0x50, 0x50, 0x31, 0xff, 
	0xff, 0xe7, 0x9c, 0xd2, 0x64, 0x73, 0x3f, 0x81, 0xcf, 0x3c, 0x66, 0xf6, 0x3f, 0x37, 0x67, 0xff, 
	0xff, 0xf7, 0x9f, 0xf7, 0xe7, 0xfe, 0x7f, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xe7, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x4f, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xef, 0xf4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x9f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xed, 0xef, 0xfb, 0xdf, 0xff, 0xdf, 0xfb, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0xc7, 0xf8, 0x8f, 0xff, 0xcf, 0xf1, 0xfd, 0xff, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x47, 0xf0, 0x8f, 0xff, 0x87, 0xf1, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x08, 0x46, 0xff, 0x8f, 0xbf, 0xd7, 0xf5, 0xfb, 0xfe, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x0c, 0xc0, 0x38, 0x8e, 0x00, 0xd7, 0xe5, 0xc0, 0xe4, 0x3d, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x87, 0xc0, 0x18, 0xcc, 0x00, 0xd3, 0xed, 0xce, 0x73, 0x9d, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x81, 0xc2, 0x10, 0x8c, 0x20, 0xdb, 0xc9, 0xbf, 0x33, 0xcd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0xc7, 0x19, 0x88, 0x78, 0xd9, 0xdd, 0xbf, 0xb7, 0xed, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x47, 0x18, 0x88, 0xf8, 0xdd, 0x9d, 0x3f, 0x97, 0xe9, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3c, 0x47, 0x18, 0x88, 0xf8, 0xdc, 0xb9, 0xbf, 0xb7, 0xcd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x0c, 0x47, 0x10, 0x8c, 0x70, 0xde, 0xbd, 0xbf, 0x37, 0xed, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x47, 0x18, 0xcc, 0x00, 0xde, 0x39, 0x9f, 0x67, 0xe9, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x67, 0x18, 0x8e, 0x00, 0xde, 0x7d, 0xc4, 0xf7, 0xcd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xcf, 0x9b, 0xaf, 0x09, 0xdf, 0x7d, 0xf3, 0xf7, 0xed, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x09, 0x02, 0x02, 0x04, 0x11, 0x64, 0x89, 0x24, 0x04, 0x18, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x1a, 0xfb, 0x7c, 0x3b, 0x69, 0x2b, 0x32, 0x2a, 0x54, 0xd0, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x87, 0x29, 0x35, 0x2a, 0xd9, 0x89, 0xb3, 0x2a, 0x56, 0xd1, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x08, 0x02, 0x02, 0x00, 0x00, 0x04, 0x08, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xb6, 0xed, 0xd9, 0x4d, 0xb6, 0xed, 0xb6, 0xcd, 0xef, 0x67, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};



SoftwareSerial softSerial(D5, D6);  // RX = D5, TX = D6
#define FPSerial softSerial

DFRobotDFPlayerMini myDFPlayer;

void printDetail(uint8_t type, int value);

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

const int epd_bitmap_allArray_LEN = 3;
const unsigned char* epd_bitmap_allArray[3] = {
  epd_bitmap_frame_0_delay_0,
  epd_bitmap_frame_1_delay_1s,
  epd_bitmap_frame_2_delay_0
};


void setup() {
  FPSerial.begin(9600);  // Start software serial for DFPlayer Mini
  Serial.begin(115200);  // Start hardware serial for debugging

  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
  }
  Serial.println();
  Serial.println(F("DFRobot DFPlayer Mini Demo"));
  Serial.println(F("Initializing DFPlayer ... (May take 3~5 seconds)"));

  if (!myDFPlayer.begin(FPSerial, true, true)) {  // Use software serial for communication
    Serial.println(F("Unable to begin:"));
    Serial.println(F("1. Please recheck the connection!"));
    Serial.println(F("2. Please insert the SD card!"));
    while (true)
      ;
  }
  Serial.println(F("DFPlayer Mini online."));
  myDFPlayer.volume(20);
  myDFPlayer.EQ(DFPLAYER_EQ_NORMAL);
  myDFPlayer.outputDevice(DFPLAYER_DEVICE_SD);

  Serial.println(myDFPlayer.readState());              // Read MP3 state
  Serial.println(myDFPlayer.readVolume());             // Read current volume
  Serial.println(myDFPlayer.readEQ());                 // Read EQ setting
  Serial.println(myDFPlayer.readFileCounts());         // Read total file count on SD card
  Serial.println(myDFPlayer.readCurrentFileNumber());  // Read current file number

  display.clearDisplay();

}

void loop() {
  static unsigned long timer = millis();
  for (int i = 0; i < epd_bitmap_allArray_LEN; i++) {
      display.clearDisplay();
      display.drawBitmap(0, 0, epd_bitmap_allArray[i], SCREEN_WIDTH, SCREEN_HEIGHT, SSD1306_WHITE);
      display.display();
      delay(100);
    }

  if (millis() - timer > 10000) {  // Every 10 seconds
    myDFPlayer.volume(20);
    Serial.println(myDFPlayer.readState());   // Read MP3 state
    Serial.println(myDFPlayer.readVolume());  // Read current volume
    timer = millis();
    myDFPlayer.next();  // Play next MP3
  }

  if (myDFPlayer.available()) {
    printDetail(myDFPlayer.readType(), myDFPlayer.read());  // Handle messages from DFPlayer
  }
}
